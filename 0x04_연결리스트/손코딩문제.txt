손코딩 문제

문제 1
- 원형 연결 리스트 내의 임의의 노드 하나가 주어졌을 때 해당 List의 길이를 효율적으로 구하는 방법?

문제 2
- 중간에 만나는 두 연결 리스트의 시작점들이 주어졌을 때 만나는 지점을 구하는 방법?

문제 3
- 주어진 연결 리스트 안에 사이클이 있는지 판단하라





















문제 1 답
- 동일한 노드가 나올 때 까지 계속 다음 노드로 가면 된다. 공간복잡도 O(1), 시간복잡도 O(N)

문제 2 답
- 일단 두 시작점 각각에 대해 끝까지 진행시켜서 각각의 길이를 구함.
그 후 다시 두 시작점으로 돌아와서 더 긴 쪽을 둘의 차이만큼 앞으로 먼저 이동시켜놓고,
두 시작점이 만날 때 까지 두 시작점을 동시에 한 칸씩 전진시키면 됨. 공간복잡도 O(1), 시간복잡도 O(A+B)

문제 3 답
- Floyd's cycle-finding algorithm 으로 해결가능, 공간복잡도 O(1), 시간복잡도 O(N)
한 칸씩 가는 커서와 두 칸씩 가는 커서를 동일한 시작점에서 출발시키면 사이클이 있을 경우 두 커서는 반드시 만나게 된다.
반대로 만약 사이클이 없으면 두 커서가 만나지 못하고 연결 리스트의 끝에 도달된다.